{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferdi\\\\OneDrive\\\\Desktop\\\\Documents\\\\CAPSTONE\\\\frontend\\\\src\\\\context\\\\ContentContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentContext = /*#__PURE__*/createContext();\nexport const useContent = () => {\n  _s();\n  return useContext(ContentContext);\n};\n_s(useContent, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ContentProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    isAdmin\n  } = useAuth();\n  const [properties, setProperties] = useState([]);\n  const [practiceProblems, setPracticeProblems] = useState([]);\n  const [challengeQuestions, setChallengeQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Initial content data\n  const initialProperties = [{\n    id: 1,\n    name: \"Commutative Property\",\n    formula: \"a × b = b × a\",\n    description: \"The order of factors doesn't change the product.\",\n    example: \"5 × 3 = 3 × 5 = 15\",\n    icon: \"🔄\"\n  }, {\n    id: 2,\n    name: \"Associative Property\",\n    formula: \"(a × b) × c = a × (b × c)\",\n    description: \"The way factors are grouped doesn't change the product.\",\n    example: \"(2 × 3) × 4 = 2 × (3 × 4) = 24\",\n    icon: \"🔗\"\n  }, {\n    id: 3,\n    name: \"Distributive Property\",\n    formula: \"a × (b + c) = a × b + a × c\",\n    description: \"Multiplying a sum by a number is the same as multiplying each addend by the number and then adding the products.\",\n    example: \"3 × (4 + 2) = 3 × 4 + 3 × 2 = 12 + 6 = 18\",\n    icon: \"📦\"\n  }, {\n    id: 4,\n    name: \"Identity Property\",\n    formula: \"a × 1 = a\",\n    description: \"Any number multiplied by 1 equals itself.\",\n    example: \"7 × 1 = 7\",\n    icon: \"🆔\"\n  }, {\n    id: 5,\n    name: \"Zero Property\",\n    formula: \"a × 0 = 0\",\n    description: \"Any number multiplied by 0 equals 0.\",\n    example: \"9 × 0 = 0\",\n    icon: \"0️⃣\"\n  }];\n  const initialPracticeProblems = [{\n    id: 1,\n    problem: \"What is 4 × 5?\",\n    answer: \"20\",\n    hint: \"Remember the commutative property: 4 × 5 = 5 × 4\",\n    property: \"Commutative Property\"\n  }, {\n    id: 2,\n    problem: \"What is (2 × 3) × 4?\",\n    answer: \"24\",\n    hint: \"Use the associative property to group the numbers differently\",\n    property: \"Associative Property\"\n  }, {\n    id: 3,\n    problem: \"What is 3 × (4 + 2)?\",\n    answer: \"18\",\n    hint: \"Use the distributive property to multiply each addend separately\",\n    property: \"Distributive Property\"\n  }];\n  const initialChallengeQuestions = [{\n    id: 1,\n    question: \"If 6 × (3 + 4) = (6 × 3) + (6 × 4), which property is being demonstrated?\",\n    property: \"Distributive Property\",\n    answers: [\"Commutative Property\", \"Associative Property\", \"Distributive Property\", \"Identity Property\"],\n    correctAnswer: \"Distributive Property\",\n    explanation: \"The distributive property allows us to multiply a sum by multiplying each addend separately and then adding the products.\"\n  }, {\n    id: 2,\n    question: \"What is the value of (5 × 2) × 3?\",\n    property: \"Associative Property\",\n    answers: [\"15\", \"30\", \"25\", \"20\"],\n    correctAnswer: \"30\",\n    explanation: \"Using the associative property: (5 × 2) × 3 = 10 × 3 = 30\"\n  }, {\n    id: 3,\n    question: \"If a × b = b × a, which property is being demonstrated?\",\n    property: \"Commutative Property\",\n    answers: [\"Commutative Property\", \"Associative Property\", \"Distributive Property\", \"Identity Property\"],\n    correctAnswer: \"Commutative Property\",\n    explanation: \"The commutative property states that changing the order of factors doesn't change the product.\"\n  }];\n  useEffect(() => {\n    // Load content from localStorage or use initial content\n    const loadContent = () => {\n      const storedProperties = localStorage.getItem('properties');\n      const storedPracticeProblems = localStorage.getItem('practiceProblems');\n      const storedChallengeQuestions = localStorage.getItem('challengeQuestions');\n      setProperties(storedProperties ? JSON.parse(storedProperties) : initialProperties);\n      setPracticeProblems(storedPracticeProblems ? JSON.parse(storedPracticeProblems) : initialPracticeProblems);\n      setChallengeQuestions(storedChallengeQuestions ? JSON.parse(storedChallengeQuestions) : initialChallengeQuestions);\n      setLoading(false);\n    };\n    loadContent();\n  }, []);\n  const updateContent = (type, id, data) => {\n    if (!isAdmin()) return;\n    switch (type) {\n      case 'properties':\n        let updatedProperties;\n        if (id === null) {\n          // Add new property\n          const newId = Math.max(...properties.map(p => p.id)) + 1;\n          updatedProperties = [...properties, {\n            ...data,\n            id: newId\n          }];\n        } else if (data === null) {\n          // Delete property\n          updatedProperties = properties.filter(p => p.id !== id);\n        } else {\n          // Update property\n          updatedProperties = properties.map(p => p.id === id ? {\n            ...p,\n            ...data\n          } : p);\n        }\n        setProperties(updatedProperties);\n        localStorage.setItem('properties', JSON.stringify(updatedProperties));\n        break;\n      case 'practice':\n        let updatedPracticeProblems;\n        if (id === null) {\n          // Add new problem\n          const newId = Math.max(...practiceProblems.map(p => p.id)) + 1;\n          updatedPracticeProblems = [...practiceProblems, {\n            ...data,\n            id: newId\n          }];\n        } else if (data === null) {\n          // Delete problem\n          updatedPracticeProblems = practiceProblems.filter(p => p.id !== id);\n        } else {\n          // Update problem\n          updatedPracticeProblems = practiceProblems.map(p => p.id === id ? {\n            ...p,\n            ...data\n          } : p);\n        }\n        setPracticeProblems(updatedPracticeProblems);\n        localStorage.setItem('practiceProblems', JSON.stringify(updatedPracticeProblems));\n        break;\n      case 'challenge':\n        let updatedChallengeQuestions;\n        if (id === null) {\n          // Add new question\n          const newId = Math.max(...challengeQuestions.map(q => q.id)) + 1;\n          updatedChallengeQuestions = [...challengeQuestions, {\n            ...data,\n            id: newId\n          }];\n        } else if (data === null) {\n          // Delete question\n          updatedChallengeQuestions = challengeQuestions.filter(q => q.id !== id);\n        } else {\n          // Update question\n          updatedChallengeQuestions = challengeQuestions.map(q => q.id === id ? {\n            ...q,\n            ...data\n          } : q);\n        }\n        setChallengeQuestions(updatedChallengeQuestions);\n        localStorage.setItem('challengeQuestions', JSON.stringify(updatedChallengeQuestions));\n        break;\n      default:\n        break;\n    }\n  };\n  const value = {\n    properties,\n    practiceProblems,\n    challengeQuestions,\n    updateContent,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(ContentContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s2(ContentProvider, \"sea3pN+eiKINlelRDvmXbGNlWw4=\", false, function () {\n  return [useAuth];\n});\n_c = ContentProvider;\nexport default ContentContext;\nvar _c;\n$RefreshReg$(_c, \"ContentProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useAuth","jsxDEV","_jsxDEV","ContentContext","useContent","_s","ContentProvider","children","_s2","isAdmin","properties","setProperties","practiceProblems","setPracticeProblems","challengeQuestions","setChallengeQuestions","loading","setLoading","initialProperties","id","name","formula","description","example","icon","initialPracticeProblems","problem","answer","hint","property","initialChallengeQuestions","question","answers","correctAnswer","explanation","loadContent","storedProperties","localStorage","getItem","storedPracticeProblems","storedChallengeQuestions","JSON","parse","updateContent","type","data","updatedProperties","newId","Math","max","map","p","filter","setItem","stringify","updatedPracticeProblems","updatedChallengeQuestions","q","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ferdi/OneDrive/Desktop/Documents/CAPSTONE/frontend/src/context/ContentContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst ContentContext = createContext();\r\n\r\nexport const useContent = () => useContext(ContentContext);\r\n\r\nexport const ContentProvider = ({ children }) => {\r\n  const { isAdmin } = useAuth();\r\n  const [properties, setProperties] = useState([]);\r\n  const [practiceProblems, setPracticeProblems] = useState([]);\r\n  const [challengeQuestions, setChallengeQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Initial content data\r\n  const initialProperties = [\r\n    {\r\n      id: 1,\r\n      name: \"Commutative Property\",\r\n      formula: \"a × b = b × a\",\r\n      description: \"The order of factors doesn't change the product.\",\r\n      example: \"5 × 3 = 3 × 5 = 15\",\r\n      icon: \"🔄\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Associative Property\",\r\n      formula: \"(a × b) × c = a × (b × c)\",\r\n      description: \"The way factors are grouped doesn't change the product.\",\r\n      example: \"(2 × 3) × 4 = 2 × (3 × 4) = 24\",\r\n      icon: \"🔗\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Distributive Property\",\r\n      formula: \"a × (b + c) = a × b + a × c\",\r\n      description: \"Multiplying a sum by a number is the same as multiplying each addend by the number and then adding the products.\",\r\n      example: \"3 × (4 + 2) = 3 × 4 + 3 × 2 = 12 + 6 = 18\",\r\n      icon: \"📦\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Identity Property\",\r\n      formula: \"a × 1 = a\",\r\n      description: \"Any number multiplied by 1 equals itself.\",\r\n      example: \"7 × 1 = 7\",\r\n      icon: \"🆔\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Zero Property\",\r\n      formula: \"a × 0 = 0\",\r\n      description: \"Any number multiplied by 0 equals 0.\",\r\n      example: \"9 × 0 = 0\",\r\n      icon: \"0️⃣\"\r\n    }\r\n  ];\r\n\r\n  const initialPracticeProblems = [\r\n    {\r\n      id: 1,\r\n      problem: \"What is 4 × 5?\",\r\n      answer: \"20\",\r\n      hint: \"Remember the commutative property: 4 × 5 = 5 × 4\",\r\n      property: \"Commutative Property\"\r\n    },\r\n    {\r\n      id: 2,\r\n      problem: \"What is (2 × 3) × 4?\",\r\n      answer: \"24\",\r\n      hint: \"Use the associative property to group the numbers differently\",\r\n      property: \"Associative Property\"\r\n    },\r\n    {\r\n      id: 3,\r\n      problem: \"What is 3 × (4 + 2)?\",\r\n      answer: \"18\",\r\n      hint: \"Use the distributive property to multiply each addend separately\",\r\n      property: \"Distributive Property\"\r\n    }\r\n  ];\r\n\r\n  const initialChallengeQuestions = [\r\n    {\r\n      id: 1,\r\n      question: \"If 6 × (3 + 4) = (6 × 3) + (6 × 4), which property is being demonstrated?\",\r\n      property: \"Distributive Property\",\r\n      answers: [\"Commutative Property\", \"Associative Property\", \"Distributive Property\", \"Identity Property\"],\r\n      correctAnswer: \"Distributive Property\",\r\n      explanation: \"The distributive property allows us to multiply a sum by multiplying each addend separately and then adding the products.\"\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"What is the value of (5 × 2) × 3?\",\r\n      property: \"Associative Property\",\r\n      answers: [\"15\", \"30\", \"25\", \"20\"],\r\n      correctAnswer: \"30\",\r\n      explanation: \"Using the associative property: (5 × 2) × 3 = 10 × 3 = 30\"\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"If a × b = b × a, which property is being demonstrated?\",\r\n      property: \"Commutative Property\",\r\n      answers: [\"Commutative Property\", \"Associative Property\", \"Distributive Property\", \"Identity Property\"],\r\n      correctAnswer: \"Commutative Property\",\r\n      explanation: \"The commutative property states that changing the order of factors doesn't change the product.\"\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Load content from localStorage or use initial content\r\n    const loadContent = () => {\r\n      const storedProperties = localStorage.getItem('properties');\r\n      const storedPracticeProblems = localStorage.getItem('practiceProblems');\r\n      const storedChallengeQuestions = localStorage.getItem('challengeQuestions');\r\n\r\n      setProperties(storedProperties ? JSON.parse(storedProperties) : initialProperties);\r\n      setPracticeProblems(storedPracticeProblems ? JSON.parse(storedPracticeProblems) : initialPracticeProblems);\r\n      setChallengeQuestions(storedChallengeQuestions ? JSON.parse(storedChallengeQuestions) : initialChallengeQuestions);\r\n      setLoading(false);\r\n    };\r\n\r\n    loadContent();\r\n  }, []);\r\n\r\n  const updateContent = (type, id, data) => {\r\n    if (!isAdmin()) return;\r\n\r\n    switch (type) {\r\n      case 'properties':\r\n        let updatedProperties;\r\n        if (id === null) {\r\n          // Add new property\r\n          const newId = Math.max(...properties.map(p => p.id)) + 1;\r\n          updatedProperties = [...properties, { ...data, id: newId }];\r\n        } else if (data === null) {\r\n          // Delete property\r\n          updatedProperties = properties.filter(p => p.id !== id);\r\n        } else {\r\n          // Update property\r\n          updatedProperties = properties.map(p => p.id === id ? { ...p, ...data } : p);\r\n        }\r\n        setProperties(updatedProperties);\r\n        localStorage.setItem('properties', JSON.stringify(updatedProperties));\r\n        break;\r\n\r\n      case 'practice':\r\n        let updatedPracticeProblems;\r\n        if (id === null) {\r\n          // Add new problem\r\n          const newId = Math.max(...practiceProblems.map(p => p.id)) + 1;\r\n          updatedPracticeProblems = [...practiceProblems, { ...data, id: newId }];\r\n        } else if (data === null) {\r\n          // Delete problem\r\n          updatedPracticeProblems = practiceProblems.filter(p => p.id !== id);\r\n        } else {\r\n          // Update problem\r\n          updatedPracticeProblems = practiceProblems.map(p => p.id === id ? { ...p, ...data } : p);\r\n        }\r\n        setPracticeProblems(updatedPracticeProblems);\r\n        localStorage.setItem('practiceProblems', JSON.stringify(updatedPracticeProblems));\r\n        break;\r\n\r\n      case 'challenge':\r\n        let updatedChallengeQuestions;\r\n        if (id === null) {\r\n          // Add new question\r\n          const newId = Math.max(...challengeQuestions.map(q => q.id)) + 1;\r\n          updatedChallengeQuestions = [...challengeQuestions, { ...data, id: newId }];\r\n        } else if (data === null) {\r\n          // Delete question\r\n          updatedChallengeQuestions = challengeQuestions.filter(q => q.id !== id);\r\n        } else {\r\n          // Update question\r\n          updatedChallengeQuestions = challengeQuestions.map(q => q.id === id ? { ...q, ...data } : q);\r\n        }\r\n        setChallengeQuestions(updatedChallengeQuestions);\r\n        localStorage.setItem('challengeQuestions', JSON.stringify(updatedChallengeQuestions));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    properties,\r\n    practiceProblems,\r\n    challengeQuestions,\r\n    updateContent,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <ContentContext.Provider value={value}>\r\n      {!loading && children}\r\n    </ContentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContentContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMQ,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,cAAc,CAAC;AAAA;AAACE,EAAA,CAA9CD,UAAU;AAEvB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC7B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMqB,iBAAiB,GAAG,CACxB;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,sBAAsB;IAC5BC,OAAO,EAAE,eAAe;IACxBC,WAAW,EAAE,kDAAkD;IAC/DC,OAAO,EAAE,oBAAoB;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,sBAAsB;IAC5BC,OAAO,EAAE,2BAA2B;IACpCC,WAAW,EAAE,yDAAyD;IACtEC,OAAO,EAAE,gCAAgC;IACzCC,IAAI,EAAE;EACR,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,uBAAuB;IAC7BC,OAAO,EAAE,6BAA6B;IACtCC,WAAW,EAAE,kHAAkH;IAC/HC,OAAO,EAAE,2CAA2C;IACpDC,IAAI,EAAE;EACR,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE,WAAW;IACpBC,WAAW,EAAE,2CAA2C;IACxDC,OAAO,EAAE,WAAW;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE,WAAW;IACpBC,WAAW,EAAE,sCAAsC;IACnDC,OAAO,EAAE,WAAW;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMC,uBAAuB,GAAG,CAC9B;IACEN,EAAE,EAAE,CAAC;IACLO,OAAO,EAAE,gBAAgB;IACzBC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,kDAAkD;IACxDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEV,EAAE,EAAE,CAAC;IACLO,OAAO,EAAE,sBAAsB;IAC/BC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,+DAA+D;IACrEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEV,EAAE,EAAE,CAAC;IACLO,OAAO,EAAE,sBAAsB;IAC/BC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,kEAAkE;IACxEC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAMC,yBAAyB,GAAG,CAChC;IACEX,EAAE,EAAE,CAAC;IACLY,QAAQ,EAAE,2EAA2E;IACrFF,QAAQ,EAAE,uBAAuB;IACjCG,OAAO,EAAE,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,mBAAmB,CAAC;IACvGC,aAAa,EAAE,uBAAuB;IACtCC,WAAW,EAAE;EACf,CAAC,EACD;IACEf,EAAE,EAAE,CAAC;IACLY,QAAQ,EAAE,mCAAmC;IAC7CF,QAAQ,EAAE,sBAAsB;IAChCG,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACjCC,aAAa,EAAE,IAAI;IACnBC,WAAW,EAAE;EACf,CAAC,EACD;IACEf,EAAE,EAAE,CAAC;IACLY,QAAQ,EAAE,yDAAyD;IACnEF,QAAQ,EAAE,sBAAsB;IAChCG,OAAO,EAAE,CAAC,sBAAsB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,mBAAmB,CAAC;IACvGC,aAAa,EAAE,sBAAsB;IACrCC,WAAW,EAAE;EACf,CAAC,CACF;EAEDnC,SAAS,CAAC,MAAM;IACd;IACA,MAAMoC,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAC3D,MAAMC,sBAAsB,GAAGF,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;MACvE,MAAME,wBAAwB,GAAGH,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MAE3E3B,aAAa,CAACyB,gBAAgB,GAAGK,IAAI,CAACC,KAAK,CAACN,gBAAgB,CAAC,GAAGlB,iBAAiB,CAAC;MAClFL,mBAAmB,CAAC0B,sBAAsB,GAAGE,IAAI,CAACC,KAAK,CAACH,sBAAsB,CAAC,GAAGd,uBAAuB,CAAC;MAC1GV,qBAAqB,CAACyB,wBAAwB,GAAGC,IAAI,CAACC,KAAK,CAACF,wBAAwB,CAAC,GAAGV,yBAAyB,CAAC;MAClHb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDkB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAGA,CAACC,IAAI,EAAEzB,EAAE,EAAE0B,IAAI,KAAK;IACxC,IAAI,CAACpC,OAAO,CAAC,CAAC,EAAE;IAEhB,QAAQmC,IAAI;MACV,KAAK,YAAY;QACf,IAAIE,iBAAiB;QACrB,IAAI3B,EAAE,KAAK,IAAI,EAAE;UACf;UACA,MAAM4B,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGvC,UAAU,CAACwC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,CAAC,CAAC,GAAG,CAAC;UACxD2B,iBAAiB,GAAG,CAAC,GAAGpC,UAAU,EAAE;YAAE,GAAGmC,IAAI;YAAE1B,EAAE,EAAE4B;UAAM,CAAC,CAAC;QAC7D,CAAC,MAAM,IAAIF,IAAI,KAAK,IAAI,EAAE;UACxB;UACAC,iBAAiB,GAAGpC,UAAU,CAAC0C,MAAM,CAACD,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKA,EAAE,CAAC;QACzD,CAAC,MAAM;UACL;UACA2B,iBAAiB,GAAGpC,UAAU,CAACwC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKA,EAAE,GAAG;YAAE,GAAGgC,CAAC;YAAE,GAAGN;UAAK,CAAC,GAAGM,CAAC,CAAC;QAC9E;QACAxC,aAAa,CAACmC,iBAAiB,CAAC;QAChCT,YAAY,CAACgB,OAAO,CAAC,YAAY,EAAEZ,IAAI,CAACa,SAAS,CAACR,iBAAiB,CAAC,CAAC;QACrE;MAEF,KAAK,UAAU;QACb,IAAIS,uBAAuB;QAC3B,IAAIpC,EAAE,KAAK,IAAI,EAAE;UACf;UACA,MAAM4B,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGrC,gBAAgB,CAACsC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,CAAC,CAAC,GAAG,CAAC;UAC9DoC,uBAAuB,GAAG,CAAC,GAAG3C,gBAAgB,EAAE;YAAE,GAAGiC,IAAI;YAAE1B,EAAE,EAAE4B;UAAM,CAAC,CAAC;QACzE,CAAC,MAAM,IAAIF,IAAI,KAAK,IAAI,EAAE;UACxB;UACAU,uBAAuB,GAAG3C,gBAAgB,CAACwC,MAAM,CAACD,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKA,EAAE,CAAC;QACrE,CAAC,MAAM;UACL;UACAoC,uBAAuB,GAAG3C,gBAAgB,CAACsC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAChC,EAAE,KAAKA,EAAE,GAAG;YAAE,GAAGgC,CAAC;YAAE,GAAGN;UAAK,CAAC,GAAGM,CAAC,CAAC;QAC1F;QACAtC,mBAAmB,CAAC0C,uBAAuB,CAAC;QAC5ClB,YAAY,CAACgB,OAAO,CAAC,kBAAkB,EAAEZ,IAAI,CAACa,SAAS,CAACC,uBAAuB,CAAC,CAAC;QACjF;MAEF,KAAK,WAAW;QACd,IAAIC,yBAAyB;QAC7B,IAAIrC,EAAE,KAAK,IAAI,EAAE;UACf;UACA,MAAM4B,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGnC,kBAAkB,CAACoC,GAAG,CAACO,CAAC,IAAIA,CAAC,CAACtC,EAAE,CAAC,CAAC,GAAG,CAAC;UAChEqC,yBAAyB,GAAG,CAAC,GAAG1C,kBAAkB,EAAE;YAAE,GAAG+B,IAAI;YAAE1B,EAAE,EAAE4B;UAAM,CAAC,CAAC;QAC7E,CAAC,MAAM,IAAIF,IAAI,KAAK,IAAI,EAAE;UACxB;UACAW,yBAAyB,GAAG1C,kBAAkB,CAACsC,MAAM,CAACK,CAAC,IAAIA,CAAC,CAACtC,EAAE,KAAKA,EAAE,CAAC;QACzE,CAAC,MAAM;UACL;UACAqC,yBAAyB,GAAG1C,kBAAkB,CAACoC,GAAG,CAACO,CAAC,IAAIA,CAAC,CAACtC,EAAE,KAAKA,EAAE,GAAG;YAAE,GAAGsC,CAAC;YAAE,GAAGZ;UAAK,CAAC,GAAGY,CAAC,CAAC;QAC9F;QACA1C,qBAAqB,CAACyC,yBAAyB,CAAC;QAChDnB,YAAY,CAACgB,OAAO,CAAC,oBAAoB,EAAEZ,IAAI,CAACa,SAAS,CAACE,yBAAyB,CAAC,CAAC;QACrF;MAEF;QACE;IACJ;EACF,CAAC;EAED,MAAME,KAAK,GAAG;IACZhD,UAAU;IACVE,gBAAgB;IAChBE,kBAAkB;IAClB6B,aAAa;IACb3B;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,cAAc,CAACwD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnD,QAAA,EACnC,CAACS,OAAO,IAAIT;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE9B,CAAC;AAACvD,GAAA,CA/LWF,eAAe;EAAA,QACNN,OAAO;AAAA;AAAAgE,EAAA,GADhB1D,eAAe;AAiM5B,eAAeH,cAAc;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}